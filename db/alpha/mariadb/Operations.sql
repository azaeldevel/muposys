
CREATE TABLE Operation (op INT NOT NULL,final VARCHAR(60),user INT,FOREIGN KEY(op) REFERENCES Entities(id),FOREIGN KEY(user) REFERENCES Users(person));

CREATE TABLE ListPrices(list INT PRIMARY KEY NOT NULL,name VARCHAR(20),label VARCHAR(60),FOREIGN KEY(list) REFERENCES Entities(id));

CREATE TABLE Catalog(catalog INT PRIMARY KEY NOT NULL,name VARCHAR(60),FOREIGN KEY(catalog) REFERENCES Entities(id));
ALTER TABLE Catalog ADD COLUMN label VARCHAR(50);


CREATE TABLE Cataloging(id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,catalog INT NOT NULL,number_id VARCHAR(60),name VARCHAR(60),FOREIGN KEY(catalog) REFERENCES Catalog(catalog));
ALTER TABLE Cataloging ADD CONSTRAINT Cataloging_number_unique UNIQUE (catalog,number_id);
ALTER TABLE Cataloging ADD COLUMN active ENUM('Y','N');
ALTER TABLE Cataloging ADD CONSTRAINT Cataloging_Entity_id FOREIGN KEY(id) REFERENCES Entities(id) ;
ALTER TABLE Cataloging ADD COLUMN value FLOAT;
ALTER TABLE Cataloging ADD COLUMN listprice INT DEFAULT 16 ;
ALTER TABLE Cataloging ADD CONSTRAINT Cataloging_ListPrices FOREIGN KEY(listprice) REFERENCES Entities(id) ;

CREATE TABLE Stock (stock INT PRIMARY KEY NOT NULL,name VARCHAR(60),FOREIGN KEY(stock) REFERENCES ListPrices(list));
ALTER TABLE Stock ADD COLUMN label VARCHAR(50);

CREATE TABLE Stocking (id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,stock INT NOT NULL,item INT NOT NULL,amount INT NOT NULL,FOREIGN KEY(stock) REFERENCES Stock(stock),FOREIGN KEY(item) REFERENCES Cataloging(id));

CREATE TABLE OperationStock (id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,origin INT NOT NULL,finale INT NOT NULL,FOREIGN KEY(origin) REFERENCES Stocking(id),FOREIGN KEY(finale) REFERENCES Stocking(id));
